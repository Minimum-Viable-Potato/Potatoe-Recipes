'use strict';

var ingredientList = [];

//loop to grab all the ingredients from catalog.js ingredients list
for (var i=0; i <allRecipes.length; i++){
  for (var j=0; j<allRecipes[i].ingredients.length; j++){
    ingredientList.push(allRecipes[i].ingredients[j].toLowerCase());
  }
}

ingredientList.sort();

//converts ingredientList into a set and removes duplicates to get a unique set of Ingredients

var uniqIngredList = [...new Set(ingredientList)];


//render dropdown
var dropDown = document.getElementById('ingredients_box');

function renderDropDown() {
  for (var k = 0; k < uniqIngredList.length; k++) {
    var option = document.createElement('option');
    option.textContent = uniqIngredList[k];
    dropDown.appendChild(option);
  }
  
}

renderDropDown();

//DONE:user selects an item from dropdown and it is added to an array
var selectedIngArr = [];

// this function generates the array recipes based on selected ingredients to render to page
function listQ(){
  if (localStorage.getItem('selected potatoes')){
    selectedIngArr = loadLocalStorage();
  }
  selectedIngArr.push(this.value);
  saveLocalStorage();
  firstTime++;
  renderCheck();
  renderPics();
  window.location.reload();
   
}

document.getElementById('ingredients_box').onchange = listQ;

//DONE: render selectedIngArr as checked boxes underneath dropmenu
var check = document.getElementById('checkbox');


// this function renders the ingredients array generated by ListQ

function renderCheck() {
  //check local storage, if nothing exits user has not previously accessed page
  if (localStorage.getItem('selected potatoes') && (firstTime === 1)){
    selectedIngArr = loadLocalStorage();
    //renders checklist based on all selected ingredients in "selectedIngArr" if the first time counter = 1, and if there is anything in local storage
    for (var i = 0; i<selectedIngArr.length; i++){
      var checkbox = document.createElement('input');
      checkbox.type = 'checkbox';
      checkbox.name = selectedIngArr[i];
      checkbox.value = selectedIngArr[i];
      checkbox.id = 'check' + (i+1);
      checkbox.className = 'checkboxitem';
      var label = document.createElement('label');
      label.htmlFor = 'id';
      label.appendChild(document.createTextNode(selectedIngArr[i]));
      label.className = 'label';
      check.appendChild(checkbox);
      check.appendChild(label);
    }
  }else{
  //renders checklist based on selected ingredients, if nothing in local storage.. will remove last item selected to avoid duplicates
    var checkbox = document.createElement('input');
    checkbox.type = 'checkbox';
    checkbox.name = selectedIngArr[selectedIngArr.length-1];
    checkbox.value = selectedIngArr.length;
    checkbox.id = 'check' + selectedIngArr.length;    
    checkbox.className = 'checkboxitem';
    var label = document.createElement('label');
    label.htmlFor = 'id';
    label.className = 'label';
    label.appendChild(document.createTextNode(selectedIngArr[selectedIngArr.length-1]));
    check.appendChild(checkbox);
    check.appendChild(label);
  }
}


//done: add selected items to local storage
//selected ingredients to save to local storage
function saveLocalStorage(){
  //"clear" wipe local storage before it saves and stores current process to avoid duplicates
  localStorage.removeItem('selected potatoes');
  var convertedItems = JSON.stringify(selectedIngArr);
  localStorage.setItem('selected potatoes', convertedItems);
}
//call local storage to add to current files
function loadLocalStorage(){
  var localStorageItems = JSON.parse(localStorage.getItem('selected potatoes'));
  return localStorageItems;
}

var El = document.getElementById('displayRecipes');
//use local storage to idetinfy selected ingredients and render recipe images
function renderPics(){
  if (localStorage.getItem('selected potatoes')){
    selectedIngArr = loadLocalStorage();
  }

  var count = El.childElementCount;
  for (var i =0; i<count; i++){
    El.removeChild(El.childNodes[0]);
  }

   // if no ingredients exist then display message "sorry.."
  if(check.childElementCount === 0){
    var pEl= document.createElement('p');
    pEl.textContent = "Sorry...No Recipes with those Ingredient Found";
    El.appendChild(pEl);
  } else if (check.childElementCount >= 1){
 
      for (var i=0; i<allRecipes.length; i++){
        if (selectedIngArr.every(function(val) { return allRecipes[i].ingredients.indexOf(val) >= 0; })){
          var imgEl = document.createElement('img');
          var aEl = document.createElement('a');
          imgEl.src = allRecipes[i].picpage;
          aEl.href = allRecipes[i].webpage;
          aEl.target = "_blank";
          aEl.textContent = allRecipes[i].name;
          El.appendChild(imgEl);
          El.appendChild(aEl);
        }
      }
    }

  if((El.childElementCount ===1) && (check.childElementCount ===0)){
    El.removeChild(El.childNodes[0]);
  }else if((El.childElementCount > 1) && (check.childElementCount > 0)){
    return;
  }else{
    var pEl= document.createElement('p');
    pEl.textContent = "Sorry...No Recipes with those Ingredient Found";
    El.appendChild(pEl);
  }


}
//done:create button that removes all checked items from selectedItems array

// onclick, remove all checked items from the selected ingredients
function removebutton(event){
  event.preventDefault();
  //this function returns an array of all the ingredients (strings) selected from the dropdown and rendered on the page.
  generateSelectionsArr();
  // this function loops through each checkbox element and splices the value of any checked element out of the selected ing array
  clearCheckboxes();
}

// runs the remove button function when user clicks button
document.getElementById('removeBtn').addEventListener('click', removebutton);

//this function returns an array of all the ingredients (strings) selected from the dropdown and rendered on the page.
function generateSelectionsArr(){
  var checkboxSelectionsArr = [];
  var checkboxElements = document.getElementsByClassName('checkboxitem');
  for (var f = 0; f < (checkboxElements.length); f++){
    //push each selected (note: SELECTED =! CHECKED) checkbox item into an array
    var checkboxitem = checkboxElements[f];
    var checkboxvalue = checkboxitem.name;
    checkboxSelectionsArr.push(checkboxvalue);
  }
  return checkboxSelectionsArr;
}

// this function loops through each checkbox element and splices the value of any checked element out of the selected ing array
function clearCheckboxes(){
  var checkboxElements = document.getElementsByClassName('checkboxitem');
  //loop through all the checkbox elements
  for (var i = 0; i < (checkboxElements.length); i++){
    var checkboxElement = checkboxElements[i];
    if (checkboxElement.checked){
      //if true, splice the index of selectedIngArr[checkboxElement[i].value from selectedingrarr https://www.w3schools.com/jsref/jsref_indexof.asp
      // splice syntax: array.splice(index, numberofitems to remove)  https://www.w3schools.com/jsref/jsref_slice_string.asp
      // indexof syntax: array.indexof (search value, start) > this searches through an array until it finds the search value, then returns the index of that value
      //so we want to search through the selected ingredients array until we find the value of the checkbox element in our i for loop.  
      //This will return the index of that ingredient in the selected ingarr, and then splice that ingredient from the array.  
      selectedIngArr.splice(selectedIngArr.indexOf(checkboxElement.name), 1);
    }
  }

  // then clear local storage
  saveLocalStorage();
  loadLocalStorage();

  // then delete ALL the children elements of the checkbox container

  var myNode = document.getElementById('checkbox');
  while (myNode.firstChild){
    myNode.removeChild(myNode.lastChild); 
  }

  //then re render NEW checkboxes based on our updated selected ingredients array
  reRenderCheck();
  renderPics();

}
// this function re renders all the checkboxes after we've removed the selected items
function reRenderCheck(){
  for (var i = 0; i < selectedIngArr.length; i++){
    var checkbox = document.createElement('input');
    checkbox.type = 'checkbox';
    checkbox.name = selectedIngArr[i];
    checkbox.value = selectedIngArr.length;
    checkbox.id = 'check' + selectedIngArr.length;
    checkbox.className = 'checkboxitem';
    var label = document.createElement('label');
    label.htmlFor = 'id';
    label.className = 'label';
    label.appendChild(document.createTextNode(selectedIngArr[i]));
    check.appendChild(checkbox);
    check.appendChild(label);
  }
}



var firstTime=0;
//load page with localStorage information, will determine if user has accessed this page.
if (localStorage.getItem('selected potatoes')){
  selectedIngArr = loadLocalStorage();
  firstTime = 1;
  renderCheck();
  renderPics();
}



